# Color the county names if on hurricane path
# theme(axis.text.y = element_text(color = county_color_map, size = 12)) +
#Charlotte
annotate("text", x = -185, y = 7.4, label = paste0("      ", round(abs(cdf_value_1y - cdf_value_1n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Collier
annotate("text", x = -185, y = 6.4, label = paste0("      ", round(abs(cdf_value_2y - cdf_value_2n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Hillsborough
annotate("text", x = -185, y = 5.4, label = paste0("      ", round(abs(cdf_value_3y - cdf_value_3n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Lee
annotate("text", x = -185, y = 4.4, label = paste0("      ", round(abs(cdf_value_4y - cdf_value_4n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Manatee
annotate("text", x = -185, y = 3.4, label = paste0("      ", round(abs(cdf_value_5y - cdf_value_5n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Miami
annotate("text", x = -185, y = 2.4, label = paste0("      ", round(abs(cdf_value_6y - cdf_value_6n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
##Pinellas
annotate("text", x = -185, y = 1.4, label = paste0("      ", round(abs(cdf_value_7y - cdf_value_7n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black")
png("irma2_25_mang_082323_update_newbenchmark_v2.png")
print(f1_50_mang)
dev.off()
######graph 3: Hurricane Irma Price Dispersion Ridgeplot
rm(list=ls())
df_mang <- read.csv("../../Data/pricediff_irma2_update_newbenchmark.csv", header=TRUE, sep=",")
##filter out values greater than 200
df_mang_filtered <- df_mang %>% filter(pricediff_calib <= 200 & pricediff_calib >= -100)
# Modify county names to add * for selected counties
df_mang_filtered <- df_mang_filtered %>%
mutate(fips_name = ifelse(fips_name %in% c("Charlotte", "Lee","Hillsborough", "Collier"), paste0(fips_name, "*"), fips_name))
# Order the county names in reverse alphabetical order
df_mang_filtered$fips_name <- factor(df_mang_filtered$fips_name,
levels = rev(sort(unique(df_mang_filtered$fips_name))))
# Step 2. calculate empirical CDF
#define a function to caclulate empirical CDF
#ecdf is a built-in function in R
calculate_cdf_for_condition <- function(data, fips_name_condition, mangrove_condition, threshold) {
# Filter the data based on the specified conditions
filtered_data <- data[data$fips_name == fips_name_condition & data$mangrove == mangrove_condition, ]
# Calculate the CDF for the filtered data
cdf <- ecdf(filtered_data$pricediff_calib)
# Calculate and return the CDF value at the specified threshold
return(cdf(threshold))
}
# Calculate the CDF for the specified conditions
#for example, 'df_value_1y' calculate the CDF for the condition of "Pinellas" and "Yes" (mangrove within 2km)
cdf_value_7y <- calculate_cdf_for_condition(df_mang_filtered, "Pinellas", "Yes", -25)
print(cdf_value_7y)
cdf_value_7n <- calculate_cdf_for_condition(df_mang_filtered, "Pinellas", "No", -25)
print(cdf_value_7y - cdf_value_7n)
cdf_value_6y <- calculate_cdf_for_condition(df_mang_filtered, "Miami", "Yes", -25)
# print(cdf_value_2y)
cdf_value_6n <- calculate_cdf_for_condition(df_mang_filtered, "Miami", "No", -25)
# print(cdf_value_2n)
print(cdf_value_6y - cdf_value_6n)
cdf_value_5y <- calculate_cdf_for_condition(df_mang_filtered, "Manatee", "Yes", -25)
cdf_value_5n <- calculate_cdf_for_condition(df_mang_filtered, "Manatee", "No", -25)
print(cdf_value_5y - cdf_value_5n)
cdf_value_4y <- calculate_cdf_for_condition(df_mang_filtered, "Lee*", "Yes", -25)
cdf_value_4n <- calculate_cdf_for_condition(df_mang_filtered, "Lee*", "No", -25)
print(cdf_value_4y - cdf_value_4n)
cdf_value_3y <- calculate_cdf_for_condition(df_mang_filtered, "Hillsborough*", "Yes", -25)
cdf_value_3n <- calculate_cdf_for_condition(df_mang_filtered, "Hillsborough*", "No", -25)
print(cdf_value_3y - cdf_value_3n)
cdf_value_2y <- calculate_cdf_for_condition(df_mang_filtered, "Collier*", "Yes", -25)
cdf_value_2n <- calculate_cdf_for_condition(df_mang_filtered, "Collier*", "No", -25)
print(cdf_value_2y - cdf_value_2n)
# print(cdf_value_6y)
# print(cdf_value_6n)
cdf_value_1y <- calculate_cdf_for_condition(df_mang_filtered, "Charlotte*", "Yes", -25)
cdf_value_1n <- calculate_cdf_for_condition(df_mang_filtered, "Charlotte*", "No", -25)
print(cdf_value_1y - cdf_value_1n)
# Set the desired color palette
my_palette <- c("darkgray", "palegreen1")  # Replace with your preferred color palette function and number of colors
###overlapping graphs: with both mean and var effect
###Mangrove effect: Highlight losses above 50
gg_mang <- ggplot(df_mang_filtered, aes(x = pricediff_calib, y = fips_name, fill = mangrove)) +
geom_density_ridges(
na.rm = TRUE,
quantile_lines = TRUE,
quantiles = 2,
vline_linetype = "dashed",  # <-- dashed median line
# alpha = 0.8,
aes(alpha=mangrove),
scale =1.3) +
scale_fill_manual(values = my_palette,
name="Mangrove Distance",
breaks=c("No", "Yes"),
labels=c("Far (>16km)", "Near (<2km)"),
# labels=c("Far from mangrove", "Near mangrove"),
guide = guide_legend(override.aes = list(linetype = "blank", colour = NA))
) +
scale_alpha_manual(
values = c("No" = 0.8, "Yes" = 0.3),  # gray is lighter
guide = "none"                        # donâ€™t show alpha in legend
) +
theme_ridges()
gg_mang <- gg_mang +
geom_point(
data = data.frame(mangrove = c("No","Yes")),
aes(x = -Inf, y = -Inf, fill = mangrove),
shape = 22, size = 5,
colour = "black",       # border around legend boxes
inherit.aes = FALSE,
alpha = 0,
show.legend = TRUE
) +
guides(
linetype = "none",
fill = guide_legend(
override.aes = list(
shape  = 22,
size   = 5,
stroke = 0.01,       # border thickness (default ~0.8, lower = thinner)
colour = "black",
alpha  = 0.6
)
)
)
# Build ggplot and extract data
d_mang <- ggplot_build(gg_mang)$data[[1]]
# Add geom_ribbon for shaded area
f1_50_mang<-
gg_mang +
geom_ribbon(
data = transform(subset(d_mang, x <= -25), fips_name = group),
aes(x, ymin = ymin, ymax = ymax, group = group),
fill = "red",
alpha = 0.3)+
xlab("Price Change (%) After Hurrican Irma - Mangrove Effect") + ylab(" ")+
theme(axis.title.x = element_text(hjust = 0.5),  # Center x-axis label
axis.title.y = element_text(hjust = 0.5))+  # Center y-axis label
# Color the county names if on hurricane path
# theme(axis.text.y = element_text(color = county_color_map, size = 12)) +
#Charlotte
annotate("text", x = -188, y = 7.4, label = paste0("      ", round(abs(cdf_value_1y - cdf_value_1n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Collier
annotate("text", x = -188, y = 6.4, label = paste0("      ", round(abs(cdf_value_2y - cdf_value_2n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Hillsborough
annotate("text", x = -188, y = 5.4, label = paste0("      ", round(abs(cdf_value_3y - cdf_value_3n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Lee
annotate("text", x = -188, y = 4.4, label = paste0("      ", round(abs(cdf_value_4y - cdf_value_4n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Manatee
annotate("text", x = -188, y = 3.4, label = paste0("      ", round(abs(cdf_value_5y - cdf_value_5n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
#Miami
annotate("text", x = -188, y = 2.4, label = paste0("      ", round(abs(cdf_value_6y - cdf_value_6n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black") +
##Pinellas
annotate("text", x = -188, y = 1.4, label = paste0("      ", round(abs(cdf_value_7y - cdf_value_7n)*100,0),"ppt"),
vjust = 1, hjust = 0, size = 4, color ="black")
png("irma2_25_mang_082323_update_newbenchmark_v2.png")
print(f1_50_mang)
dev.off()
######################graph of Sandy######################
###Highlight losses above 50
gg <- ggplot(df_mang_filtered, aes(x = pricediff_calib, y = fips_name)) +
stat_density_ridges(
geom = "density_ridges_gradient",
na.rm = TRUE,
quantile_lines = TRUE,
vline_linetype = "dashed",  # <-- dashed median line
quantiles = 2) +
theme_ridges()
# Build ggplot and extract data
d <- ggplot_build(gg)$data[[1]]
# Add geom_ribbon for shaded area
# Add geom_ribbon for shaded area
f1_50 <-
gg +
geom_ribbon(
data = transform(subset(d, x <= -25), fips_name = group),
aes(x, ymin = ymin, ymax = ymax, group = group),
fill = "red",
alpha = 0.7) +
xlab("Price Change (%) After Hurricane Sandy") + ylab(" ") +
theme(axis.title.x = element_text(hjust = 0.5),  # Center x-axis label
axis.title.y = element_text(hjust = 0.5)) +  # Center y-axis label
# Updated y-values to match reverse alphabetical order:
# Pinellas (Previously at y = 6.9, now at 0.9)
annotate("text", x = -170, y = 0.9, label = paste0("   ", round((cdf_value_7n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
annotate("text", x = -165, y = 1.9, label = paste0("   ", round((cdf_value_6n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Manatee (Previously at y = 4.9, now at 2.9)
annotate("text", x = -165, y = 2.9, label = paste0("   ", round((cdf_value_5n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Lee (Previously at y = 3.9, now at 3.9)
annotate("text", x = -165, y = 3.9, label = paste0("   ", round((cdf_value_4n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Hillsborough (Previously at y = 2.9, now at 4.9)
annotate("text", x = -165, y = 4.9, label = paste0("   ", round((cdf_value_3n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Collier (Previously at y = 1.9, now at 5.9)
annotate("text", x = -165, y = 5.9, label = paste0("   ", round((cdf_value_2n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Charlotte (Previously at y = 0.9, now at 6.9)
annotate("text", x = -165, y = 6.9, label = paste0("   ", round((cdf_value_1n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black")
# png("sandy2_50.png")
png("sandy2_25_v2.png")
plot(f1_50)
dev.off()
######################graph of Irma######################
df_mang_irma <- read.csv("../../Data/pricediff_irma2_update_newbenchmark.csv", header=TRUE, sep=",")
df_mang_filtered_irma <- df_mang_irma %>% filter(pricediff_calib <= 200)
# Modify county names to add * for selected counties
df_mang_filtered_irma <- df_mang_filtered_irma %>%
mutate(fips_name = ifelse(fips_name %in% c("Charlotte", "Lee","Hillsborough", "Collier"), paste0(fips_name, "*"), fips_name))
df_mang_filtered_irma$fips_name <- factor(df_mang_filtered_irma$fips_name,
levels = rev(sort(unique(df_mang_filtered_irma$fips_name))))
# Calculate the CDF for the specified conditions
cdf_value_7n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Pinellas", "No", -25)
print(cdf_value_7n_irma)
cdf_value_6n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Miami", "No", -25)
print(cdf_value_6n_irma)
cdf_value_5n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Manatee", "No", -25)
print(cdf_value_5n_irma)
cdf_value_4n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Lee*", "No", -25)
print(cdf_value_4n_irma)
cdf_value_3n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Hillsborough*", "No", -25)
print(cdf_value_3n_irma)
cdf_value_2n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Collier*", "No", -25)
print(cdf_value_2n_irma)
cdf_value_1n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Charlotte*", "No", -25)
print(cdf_value_1n_irma)
# Set the desired color palette
# my_palette <- c("#D3D3D3", "#8A9A5B")  # Replace with your preferred color palette function and number of colors
# Create the plot with the specified color palette
# ggplot(df_mang_filtered, aes(x = pricediff_calib, y = fips_name, fill = mangrove)) +
#   geom_density_ridges(na.rm = TRUE) +
#   scale_fill_manual(values = my_palette)
###Highlight losses above 50
gg_irma <- ggplot(df_mang_filtered_irma, aes(x = pricediff_calib, y = fips_name)) +
stat_density_ridges(
geom = "density_ridges_gradient",
na.rm = TRUE,
quantile_lines = TRUE,
quantiles = 2,
vline_linetype = "dashed"  # <-- dashed median line
) +
theme_ridges()
# Build ggplot and extract data
d_irma <- ggplot_build(gg_irma)$data[[1]]
# Add geom_ribbon for shaded area
# Add geom_ribbon for shaded area
f1_50_irma <-
gg_irma +
geom_ribbon(
data = transform(subset(d_irma, x <= -25), fips_name = group),
aes(x, ymin = ymin, ymax = ymax, group = group),
fill = "red",
alpha = 0.7) +
xlab("Price Change (%) After Hurricane Irma") + ylab(" ") +
theme(axis.title.x = element_text(hjust = 0.5),  # Center x-axis label
axis.title.y = element_text(hjust = 0.5)) +  # Center y-axis label
# Updated y-values to match reverse alphabetical order:
# Pinellas (Previously at y = 6.9, now at 0.9)
annotate("text", x = -165, y = 0.9, label = paste0("   ", round((cdf_value_7n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Miami (Previously at y = 5.9, now at 1.9)
annotate("text", x = -165, y = 1.9, label = paste0("   ", round((cdf_value_6n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Manatee (Previously at y = 4.9, now at 2.9)
annotate("text", x = -165, y = 2.9, label = paste0("   ", round((cdf_value_5n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Lee (Previously at y = 3.9, now at 3.9)
annotate("text", x = -165, y = 3.9, label = paste0("   ", round((cdf_value_4n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size =
4, color = "black") +
# Hillsborough (Previously at y = 2.9, now at 4.9)
annotate("text", x = -165, y = 4.9, label = paste0("   ", round((cdf_value_3n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Collier (Previously at y = 1.9, now at 5.9)
annotate("text", x = -165, y = 5.9, label = paste0("   ", round((cdf_value_2n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Charlotte (Previously at y = 0.9, now at 6.9)
annotate("text", x = -165, y = 6.9, label = paste0("   ", round((cdf_value_1n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black")
# png("irma_50.png")
png("irma_25.png")
plot(f1_50_irma)
dev.off()
######################graph of Irma######################
df_mang_irma <- read.csv("../../Data/pricediff_irma2_update_newbenchmark.csv", header=TRUE, sep=",")
df_mang_filtered_irma <- df_mang_irma %>% filter(pricediff_calib <= 200)
# Modify county names to add * for selected counties
df_mang_filtered_irma <- df_mang_filtered_irma %>%
mutate(fips_name = ifelse(fips_name %in% c("Charlotte", "Lee","Hillsborough", "Collier"), paste0(fips_name, "*"), fips_name))
df_mang_filtered_irma$fips_name <- factor(df_mang_filtered_irma$fips_name,
levels = rev(sort(unique(df_mang_filtered_irma$fips_name))))
# Calculate the CDF for the specified conditions
cdf_value_7n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Pinellas", "No", -25)
print(cdf_value_7n_irma)
cdf_value_6n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Miami", "No", -25)
print(cdf_value_6n_irma)
cdf_value_5n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Manatee", "No", -25)
print(cdf_value_5n_irma)
cdf_value_4n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Lee*", "No", -25)
print(cdf_value_4n_irma)
cdf_value_3n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Hillsborough*", "No", -25)
print(cdf_value_3n_irma)
cdf_value_2n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Collier*", "No", -25)
print(cdf_value_2n_irma)
cdf_value_1n_irma <- calculate_cdf_for_condition(df_mang_filtered_irma, "Charlotte*", "No", -25)
print(cdf_value_1n_irma)
# Set the desired color palette
# my_palette <- c("#D3D3D3", "#8A9A5B")  # Replace with your preferred color palette function and number of colors
# Create the plot with the specified color palette
# ggplot(df_mang_filtered, aes(x = pricediff_calib, y = fips_name, fill = mangrove)) +
#   geom_density_ridges(na.rm = TRUE) +
#   scale_fill_manual(values = my_palette)
###Highlight losses above 50
gg_irma <- ggplot(df_mang_filtered_irma, aes(x = pricediff_calib, y = fips_name)) +
stat_density_ridges(
geom = "density_ridges_gradient",
na.rm = TRUE,
quantile_lines = TRUE,
quantiles = 2,
vline_linetype = "dashed"  # <-- dashed median line
) +
theme_ridges()
# Build ggplot and extract data
d_irma <- ggplot_build(gg_irma)$data[[1]]
# Add geom_ribbon for shaded area
# Add geom_ribbon for shaded area
f1_50_irma <-
gg_irma +
geom_ribbon(
data = transform(subset(d_irma, x <= -25), fips_name = group),
aes(x, ymin = ymin, ymax = ymax, group = group),
fill = "red",
alpha = 0.7) +
xlab("Price Change (%) After Hurricane Irma") + ylab(" ") +
theme(axis.title.x = element_text(hjust = 0.5),  # Center x-axis label
axis.title.y = element_text(hjust = 0.5)) +  # Center y-axis label
# Updated y-values to match reverse alphabetical order:
# Pinellas (Previously at y = 6.9, now at 0.9)
annotate("text", x = -165, y = 0.9, label = paste0("   ", round((cdf_value_7n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Miami (Previously at y = 5.9, now at 1.9)
annotate("text", x = -165, y = 1.9, label = paste0("   ", round((cdf_value_6n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Manatee (Previously at y = 4.9, now at 2.9)
annotate("text", x = -165, y = 2.9, label = paste0("   ", round((cdf_value_5n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Lee (Previously at y = 3.9, now at 3.9)
annotate("text", x = -165, y = 3.9, label = paste0("   ", round((cdf_value_4n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size =
4, color = "black") +
# Hillsborough (Previously at y = 2.9, now at 4.9)
annotate("text", x = -165, y = 4.9, label = paste0("   ", round((cdf_value_3n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Collier (Previously at y = 1.9, now at 5.9)
annotate("text", x = -165, y = 5.9, label = paste0("   ", round((cdf_value_2n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Charlotte (Previously at y = 0.9, now at 6.9)
annotate("text", x = -165, y = 6.9, label = paste0("   ", round((cdf_value_1n_irma) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black")
# png("irma_50.png")
png("irma_25_v2.png")
plot(f1_50_irma)
dev.off()
######################graph of Sandy######################
df_mang <- read.csv("../../Data/pricediff_sandy2_b_update_newbenchmark.csv", header=TRUE, sep=",")
df_mang_filtered <- df_mang %>% filter(pricediff_calib <= 200)
rm(list=ls())
library(haven)
#install.packages("ggridges")
library(ggridges)
library(ggplot2)
library(dplyr)
library(viridis)  # Example color palette library
library(ggtext)
df_mang <- read.csv("../../Data/pricediff_sandy2_b_update_newbenchmark.csv", header=TRUE, sep=",")
df_mang_filtered <- df_mang %>% filter(pricediff_calib <= 200)
df_mang_filtered$fips_name <- factor(df_mang_filtered$fips_name,
levels = rev(sort(unique(df_mang_filtered$fips_name))))
calculate_cdf_for_condition <- function(data, fips_name_condition, mangrove_condition, threshold) {
# Filter the data based on the specified conditions
filtered_data <- data[data$fips_name == fips_name_condition & data$mangrove == mangrove_condition, ]
# Calculate the CDF for the filtered data
cdf <- ecdf(filtered_data$pricediff_calib)
# Calculate and return the CDF value at the specified threshold
return(cdf(threshold))
}
###Highlight losses above 50
gg <- ggplot(df_mang_filtered, aes(x = pricediff_calib, y = fips_name)) +
stat_density_ridges(
geom = "density_ridges_gradient",
na.rm = TRUE,
quantile_lines = TRUE,
vline_linetype = "dashed",  # <-- dashed median line
quantiles = 2) +
theme_ridges()
# Build ggplot and extract data
d <- ggplot_build(gg)$data[[1]]
# Add geom_ribbon for shaded area
# Add geom_ribbon for shaded area
f1_50 <-
gg +
geom_ribbon(
data = transform(subset(d, x <= -25), fips_name = group),
aes(x, ymin = ymin, ymax = ymax, group = group),
fill = "red",
alpha = 0.7) +
xlab("Price Change (%) After Hurricane Sandy") + ylab(" ") +
theme(axis.title.x = element_text(hjust = 0.5),  # Center x-axis label
axis.title.y = element_text(hjust = 0.5)) +  # Center y-axis label
# Updated y-values to match reverse alphabetical order:
# Pinellas (Previously at y = 6.9, now at 0.9)
annotate("text", x = -170, y = 0.9, label = paste0("   ", round((cdf_value_7n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
annotate("text", x = -165, y = 1.9, label = paste0("   ", round((cdf_value_6n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Manatee (Previously at y = 4.9, now at 2.9)
annotate("text", x = -165, y = 2.9, label = paste0("   ", round((cdf_value_5n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Lee (Previously at y = 3.9, now at 3.9)
annotate("text", x = -165, y = 3.9, label = paste0("   ", round((cdf_value_4n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Hillsborough (Previously at y = 2.9, now at 4.9)
annotate("text", x = -165, y = 4.9, label = paste0("   ", round((cdf_value_3n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Collier (Previously at y = 1.9, now at 5.9)
annotate("text", x = -165, y = 5.9, label = paste0("   ", round((cdf_value_2n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Charlotte (Previously at y = 0.9, now at 6.9)
annotate("text", x = -165, y = 6.9, label = paste0("   ", round((cdf_value_1n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black")
df_mang <- read.csv("../../Data/pricediff_sandy2_b_update_newbenchmark.csv", header=TRUE, sep=",")
df_mang_filtered <- df_mang %>% filter(pricediff_calib <= 200)
df_mang_filtered$fips_name <- factor(df_mang_filtered$fips_name,
levels = rev(sort(unique(df_mang_filtered$fips_name))))
calculate_cdf_for_condition <- function(data, fips_name_condition, mangrove_condition, threshold) {
# Filter the data based on the specified conditions
filtered_data <- data[data$fips_name == fips_name_condition & data$mangrove == mangrove_condition, ]
# Calculate the CDF for the filtered data
cdf <- ecdf(filtered_data$pricediff_calib)
# Calculate and return the CDF value at the specified threshold
return(cdf(threshold))
}
cdf_value_7n <- calculate_cdf_for_condition(df_mang_filtered, "Pinellas", "No", -25)
print(cdf_value_7n)
cdf_value_6n <- calculate_cdf_for_condition(df_mang_filtered, "Miami", "No", -25)
print(cdf_value_6n)
cdf_value_5n <- calculate_cdf_for_condition(df_mang_filtered, "Manatee", "No", -25)
print(cdf_value_5n)
cdf_value_4n <- calculate_cdf_for_condition(df_mang_filtered, "Lee", "No", -25)
print(cdf_value_4n)
cdf_value_3n <- calculate_cdf_for_condition(df_mang_filtered, "Hillsborough", "No", -25)
print(cdf_value_3n)
cdf_value_2n <- calculate_cdf_for_condition(df_mang_filtered, "Collier", "No", -25)
print(cdf_value_2n)
cdf_value_1n <- calculate_cdf_for_condition(df_mang_filtered, "Charlotte", "No", -25)
print(cdf_value_1n)
###Highlight losses above 50
gg <- ggplot(df_mang_filtered, aes(x = pricediff_calib, y = fips_name)) +
stat_density_ridges(
geom = "density_ridges_gradient",
na.rm = TRUE,
quantile_lines = TRUE,
vline_linetype = "dashed",  # <-- dashed median line
quantiles = 2) +
theme_ridges()
# Build ggplot and extract data
d <- ggplot_build(gg)$data[[1]]
# Add geom_ribbon for shaded area
# Add geom_ribbon for shaded area
f1_50 <-
gg +
geom_ribbon(
data = transform(subset(d, x <= -25), fips_name = group),
aes(x, ymin = ymin, ymax = ymax, group = group),
fill = "red",
alpha = 0.7) +
xlab("Price Change (%) After Hurricane Sandy") + ylab(" ") +
theme(axis.title.x = element_text(hjust = 0.5),  # Center x-axis label
axis.title.y = element_text(hjust = 0.5)) +  # Center y-axis label
# Updated y-values to match reverse alphabetical order:
# Pinellas (Previously at y = 6.9, now at 0.9)
annotate("text", x = -170, y = 0.9, label = paste0("   ", round((cdf_value_7n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
annotate("text", x = -165, y = 1.9, label = paste0("   ", round((cdf_value_6n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Manatee (Previously at y = 4.9, now at 2.9)
annotate("text", x = -165, y = 2.9, label = paste0("   ", round((cdf_value_5n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Lee (Previously at y = 3.9, now at 3.9)
annotate("text", x = -165, y = 3.9, label = paste0("   ", round((cdf_value_4n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Hillsborough (Previously at y = 2.9, now at 4.9)
annotate("text", x = -165, y = 4.9, label = paste0("   ", round((cdf_value_3n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Collier (Previously at y = 1.9, now at 5.9)
annotate("text", x = -165, y = 5.9, label = paste0("   ", round((cdf_value_2n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black") +
# Charlotte (Previously at y = 0.9, now at 6.9)
annotate("text", x = -165, y = 6.9, label = paste0("   ", round((cdf_value_1n) * 100, 0), "%"),
vjust = 1, hjust = 0, size = 4, color = "black")
# png("sandy2_50.png")
png("sandy2_25_v2.png")
plot(f1_50)
dev.off()
